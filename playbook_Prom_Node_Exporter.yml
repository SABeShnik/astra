---
- hosts: all
  become: yes
#  become_user: vagrant
  become_method: sudo
#  remote_user: ubuntu
  vars:
    node_exporter_version: 1.5.0
  tasks:
    - name: test connection
      ping:
    - name: create group
      group:
        name: prometheus
        state: present
    - name: create user
      user:
        name: prometheus
        group: prometheus
        createhome: no
        system: yes
        state: present
    - name: create opt directory for prometheus
      file:
        path: /opt/prometheus
        state: directory
    - name: download node exporter
      get_url:
        url: https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz
        dest: /opt/prometheus
    - name: unarchive node exporter
      unarchive:
        remote_src: yes
        src: /opt/prometheus/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz
        dest: /opt/prometheus
    - name: create symlink to node exporter
      file:
        path: /usr/bin/node_exporter
        state: link
        src: /opt/prometheus/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter
    - name: install unit file to systemd
      template:
        src: node_exporter.service
        dest: /etc/systemd/system/node_exporter.service
    - name: configure systemd to use service
      systemd:
        daemon_reload: yes
        enabled: yes
        state: started
        name: node_exporter.service

    - name: create opt directory for mon
      file:
        path: /opt/mon
        state: directory

    - name: create opt directory for provision dashboards
      file:
        path: /opt/mon/provision/dashboards
        state: directory

    - name: create opt directory for provision datasources
      file:
        path: /opt/mon/provision/datasources
        state: directory
    - name: create opt directory for provision json
      file:
        path: /opt/mon/provision/json
        state: directory

    - name: create opt directory for prometheus conf
      file:
        path: /opt/prom
        state: directory

    - name: Copy prometheus conf
      copy:
        src: /vagrant/prometheus.yml
        dest: /opt/prom/prometheus.yml
        remote_src: yes

    - name: Copy docker-compose
      copy:
      # inside vagrant VM from vagrant catalog
        src: /vagrant/docker-compose.yml
        dest: /opt/mon/docker-compose.yml
        remote_src: yes
#        owner: vagrant
#        group: vagrant
#        mode: '0644'

    - name: Copy dashboards
      copy:
        src: /vagrant/dashboards.yml
        dest: /opt/mon/provision/dashboards/dashboards.yml
        remote_src: yes

    - name: Copy datasources
      copy:
        src: /vagrant/prometheus-GF.yml
        dest: /opt/mon/provision/datasources/prometheus-GF.yml
        remote_src: yes

    - name: Copy json
      copy:
        src: /vagrant/node-exporter-full_rev30.json
        dest: /opt/mon/provision/json/node-exporter-full_rev30.json
        remote_src: yes

#    - name: Install docker.io
#      apt:
#        name: docker.io
#        state: present
#        update_cache: yes

    - name: Install docker-compose
      apt:
        name: docker-compose
        state: present
        update_cache: yes

    - name: Run container
      shell:
        cmd: "docker-compose up -d"
        chdir: /opt/mon/
